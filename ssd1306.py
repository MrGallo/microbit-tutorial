# OLED Driver for Microbit

from microbit import i2c


class SSD1306:
    def __init__(self, width, height, i2c, addr=0x3C):
        self.width = width
        self.height = height
        self.i2c = i2c
        self.addr = addr
        self.buffer = bytearray((self.width * self.height) // 8)
        self.init_display()

    def init_display(self):
        for cmd in (
            0xAE, 0xD5, 0x80, 0xA8, 0x3F, 0xD3, 0x00, 0x40, 0x8D, 0x14,
            0x20, 0x00, 0xA1, 0xC8, 0xDA, 0x12, 0x81, 0xCF, 0xD9, 0xF1,
            0xDB, 0x40, 0xA4, 0xA6, 0xAF
        ):
            self.write_cmd(cmd)

    def write_cmd(self, cmd):
        self.i2c.write(self.addr, bytearray([0x00, cmd]))

    def show(self):
        self.write_cmd(0x21)
        self.write_cmd(0)
        self.write_cmd(self.width - 1)
        self.write_cmd(0x22)
        self.write_cmd(0)
        self.write_cmd(self.height // 8 - 1)
        self.i2c.write(self.addr, b'\x40' + self.buffer)

    def fill(self, color):
        for i in range(len(self.buffer)):
            self.buffer[i] = 0xFF if color else 0x00

    def text(self, string, x, y):
        index = x + y * 128 // 8
        for c in string.upper():
            char_index = ord(c)
            for i in range(5):
                self.buffer[index + i] = FONT[char_index][i]
            index += 6


# Define a simple font (5x7)

FONT = {
    32: [0, 0, 0, 0, 0],  # Space (32)
    33: [0, 0, 0x5F, 0, 0],  # ! (33)
    44: [0x00, 0x01, 0x06, 0x00, 0x00],  # , (44)
    46: [0x00, 0x01, 0x01, 0x00, 0x00],  # . (46)
    48: [0x3E, 0x45, 0x49, 0x51, 0x3E],  # 0 (48)
    49: [0x00, 0x42, 0x7F, 0x40, 0x00],  # 1 (49)
    50: [0x42, 0x61, 0x51, 0x49, 0x46],  # 2 (50)
    51: [0x21, 0x41, 0x45, 0x4B, 0x31],  # 3 (51)
    52: [0x18, 0x14, 0x12, 0x7F, 0x10],  # 4 (52)
    53: [0x27, 0x45, 0x45, 0x45, 0x39],  # 5 (53)
    54: [0x3C, 0x4A, 0x49, 0x49, 0x30],  # 6 (54)
    55: [0x01, 0x71, 0x09, 0x05, 0x03],  # 7 (55)
    56: [0x36, 0x49, 0x49, 0x49, 0x36],  # 8 (56)
    57: [0x06, 0x49, 0x49, 0x29, 0x1E],  # 9 (57)
    65: [0x7E, 0x11, 0x11, 0x11, 0x7E],  # A (65)
    66: [0x7F, 0x49, 0x49, 0x49, 0x36],  # B (66)
    67: [0x3E, 0x41, 0x41, 0x41, 0x22],  # C (67)
    68: [0x7F, 0x41, 0x41, 0x22, 0x1C],  # D (68)
    69: [0x7F, 0x49, 0x49, 0x49, 0x41],  # E (69)
    70: [0x7F, 0x09, 0x09, 0x09, 0x01],  # F (70)
    71: [0x3E, 0x41, 0x49, 0x49, 0x3A],  # G (71)
    72: [0x7F, 0x08, 0x08, 0x08, 0x7F],  # H (72)
    73: [0x00, 0x41, 0x7F, 0x41, 0x00],  # I (73)
    74: [0x20, 0x40, 0x41, 0x3F, 0x01],  # J (74)
    75: [0x7F, 0x08, 0x14, 0x22, 0x41],  # K (75)
    76: [0x7F, 0x40, 0x40, 0x40, 0x40],  # L (76)
    77: [0x7F, 0x02, 0x0C, 0x02, 0x7F],  # M (77)
    78: [0x7F, 0x04, 0x08, 0x10, 0x7F],  # N (78)
    79: [0x3E, 0x41, 0x41, 0x41, 0x3E],  # O (79)
    80: [0x7F, 0x09, 0x09, 0x09, 0x06],  # P (80)
    81: [0x3E, 0x41, 0x51, 0x21, 0x5E],  # Q (81)
    82: [0x7F, 0x09, 0x19, 0x29, 0x46],  # R (82)
    83: [0x46, 0x49, 0x49, 0x49, 0x31],  # S (83)
    84: [0x01, 0x01, 0x7F, 0x01, 0x01],  # T (84)
    85: [0x3F, 0x40, 0x40, 0x40, 0x3F],  # U (85)
    86: [0x1F, 0x20, 0x40, 0x20, 0x1F],  # V (86)
    87: [0x7F, 0x20, 0x18, 0x20, 0x7F],  # W (87)
    88: [0x63, 0x14, 0x08, 0x14, 0x63],  # X (88)
    89: [0x03, 0x04, 0x78, 0x04, 0x03],  # Y (89)
    90: [0x61, 0x51, 0x49, 0x45, 0x43],  # Z (90)
}
